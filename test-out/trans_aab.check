class Match extends (String=>Boolean) {
def apply(input: String): Boolean = {
val n = input.length
if (n == 0) return false
var id = 0
var i = 0
val n_dec = n-1
while (i < n_dec) {
val x18 = input.charAt(i)
id =
if (id == 3) {
val x26 = x18 == 'A'
val x31 = if (x26) {
6
} else {
0
}
x31
}
else if (id == 6) {
val x26 = x18 == 'A'
val x30 = if (x26) {
6
} else {
val x28 = x18 == 'B'
val x29 = if (x28) {
0
} else {
0
}
x29
}
x30
}
else if (id == 0) {
val x26 = x18 == 'A'
val x27 = if (x26) {
3
} else {
0
}
x27
}
else { throw new RuntimeException("invalid state " + id) }
i += 1
}
val x18 = input.charAt(i)
if (id == 3) {
val x26 = x18 == 'A'
val x31 = if (x26) {
false
} else {
false
}
x31
}
else if (id == 6) {
val x26 = x18 == 'A'
val x30 = if (x26) {
false
} else {
val x28 = x18 == 'B'
val x29 = if (x28) {
true
} else {
false
}
x29
}
x30
}
else if (id == 0) {
val x26 = x18 == 'A'
val x27 = if (x26) {
false
} else {
false
}
x27
}
else { throw new RuntimeException("invalid state " + id) }
}
}
